
{% render 'entry' with '@/styles/sections/about-product.scss' %}

<section
  id="productSection-{{ section.id }}"
  class="about-product product-section mx-auto md:py-[60px] py-[40px] palette-{{ section.settings.color_scheme }}"
>
  <div class="container m-responsive px-10">
    {% if section.settings.title != blank %}
      <h2 class="about-product__title">
        {{ section.settings.title | default: "Products" }}
      </h2>
    {% endif %}

    <div id="productSection-{{ section.id }}" class="swiper-box">
        {% if section.settings.products_list != blank %}
          {% assign collection = section.settings.products_list %}
      
          <div class="swiper-button-next hidden md:block">
            <svg width="20" height="16" viewBox="0 0 20 16" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M12.2343 1.08621L11.6871 1.63336C11.5497 1.77077 11.5497 1.99354 11.6871 2.13094L16.8175 7.26112H0.851838C0.657523 7.26112 0.5 7.41864 0.5 7.61296V8.38692C0.5 8.58123 0.657523 8.73876 0.851838 8.73876H16.8175L11.6871 13.8691C11.5497 14.0065 11.5497 14.2293 11.6871 14.3667L12.2343 14.9138C12.3717 15.0512 12.5944 15.0512 12.7318 14.9138L19.3969 8.24873C19.5344 8.11133 19.5344 7.88855 19.3969 7.75115L12.7318 1.0862C12.5944 0.948804 12.3717 0.948805 12.2343 1.08621Z" fill="currentColor"></path>
            </svg>
          </div>
      
          <div class="swiper-button-prev hidden md:block">
            <svg width="20" height="16" viewBox="0 0 20 16" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M7.76574 1.08621L8.3129 1.63336C8.4503 1.77077 8.4503 1.99354 8.31289 2.13094L3.18254 7.26112H19.1482C19.3425 7.26112 19.5 7.41864 19.5 7.61296V8.38692C19.5 8.58123 19.3425 8.73876 19.1482 8.73876H3.18254L8.3129 13.8691C8.4503 14.0065 8.4503 14.2293 8.3129 14.3667L7.76574 14.9138C7.62834 15.0512 7.40557 15.0512 7.26817 14.9138L0.603052 8.24873C0.465647 8.11133 0.465649 7.88855 0.603054 7.75115L7.26817 1.0862C7.40557 0.948804 7.62834 0.948805 7.76574 1.08621Z" fill="currentColor"></path>
            </svg>
          </div>
      
          <div id="swiper-container-{{ section.id }}" class="swiper-container !pb-[40px] md:!pb-0">
            <div class="swiper-wrapper">
              {% for item in collection %}
                <div class="swiper-slide">
                  {% render 'product-card', product: item %}
                </div>
              {% endfor %}
            </div>
          </div>
          <div class="swiper-pagination h-[2px] bg-black/10 w-full bottom-0"></div>
          
        {% else %}
          <p class="col-span-full text-center text-gray-600 py-8">No products selected.</p>
        {% endif %}
      </div>
      

    {% if section.settings.show_bottom_panel %}
      <div class="md:flex items-center justify-center pt-10 md:pt-30">
        <h3 class="heading-4 text-center text-scheme-primary mb-4 md:mb-0">{{ section.settings.bottom_text }}</h3>
        {% if section.settings.button_text != blank %}
          <a href="{{ section.settings.button_link }}" class="btn btn-scheme btn-fourth flex ml-4">
            {{ section.settings.button_text }}
          </a>
        {% endif %}
      </div>
    {% endif %}
  </div>
</section>

<script>
  document.addEventListener('alpine:init', () => {
    Alpine.data('variantSelector', (defaultVariantId) => ({
      selectedVariants: [],
      defaultVariantId,
      updateSelectedVariants(event) {
        const form = this.$el
        const selectedCheckbox = event.target
        form.querySelectorAll('input[type="checkbox"]').forEach(cb => {
          if (cb !== selectedCheckbox) cb.checked = false
        })
        this.selectedVariants = selectedCheckbox.checked ? [selectedCheckbox.value] : []
      },
      addToCart() {
        const variantId = this.selectedVariants.length > 0 ? this.selectedVariants[0] : this.defaultVariantId
        Alpine.store('cart').addToCart({ variantId })
      }
    }))
  })

  document.addEventListener('DOMContentLoaded', () => {
    const sectionSel = '#productSection-{{ section.id }}'
    const containerSel = '#swiper-container-{{ section.id }}'

    const swiper = new Swiper(containerSel, {
      loop: true,
      slidesPerView: 4,
      spaceBetween: 8,

      // базові елементи керування (далі переб’ються брейкпоінтами)
      navigation: {
        nextEl: `${sectionSel} .swiper-button-next`,
        prevEl: `${sectionSel} .swiper-button-prev`,
        enabled: true
      },
      pagination: {
        el: `${sectionSel} .swiper-pagination`,
        type: 'progressbar',
        enabled: false
      },

      breakpoints: {
        // мобайл
        0: {
          slidesPerView: 1,
          centeredSlides: true,
          autoHeight: true,
          navigation: { enabled: false },
          pagination: { enabled: true, type: 'progressbar' }
        },
        // tablet
        768: {
          slidesPerView: 3,
          autoHeight: true,
          navigation: { enabled: true },
          pagination: { enabled: true, type: 'progressbar' }
        },
        // desktop
        1024: {
          slidesPerView: 4,
          autoHeight: true,
          navigation: { enabled: true },
          pagination: { enabled: true, type: 'progressbar' }
        }
      }
    })
  })
</script>



{% schema %}
{
"name": "Product Section",
"settings": [
  {
    "type": "product_list",
    "id": "products_list",
    "label": "Products"
  },
  {
    "type": "richtext",
    "id": "title",
    "label": "Section Title",
  },
  {
    "type": "color_scheme",
    "id": "color_scheme",
    "label": "Color Scheme",
    "default": "scheme-1"
  },
  {
    "type": "checkbox",
    "id": "show_bottom_panel",
    "label": "Show bottom panel",
    "default": true
  },
  {
    "type": "text",
    "id": "bottom_text",
    "label": "Bottom Text",
    "default": "Not sure where to start?"
  },
  {
    "type": "text",
    "id": "button_text",
    "label": "Button Text",
    "default": "TRY THEM ALL"
  },
  {
    "type": "url",
    "id": "button_link",
    "label": "Button Link"
  },
],
"presets": [
  {
    "name": "Customizable Product Section"
  }
]
}
{% endschema %}
