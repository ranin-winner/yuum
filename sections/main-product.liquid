{% render 'entry' with '@/styles/elements/_main-product.scss' %}

{% assign currentVariant = product.selected_or_first_available_variant %}
{% assign sizeGuides = section.settings.size_guide.metafields.data.page_size_guides.value %}
{% assign productCollections = product.collections | map: 'id' | join: ',' %}

{% capture price %}
    {%- assign show_compare = false -%}
        {%- if currentVariant.compare_at_price and currentVariant.compare_at_price > currentVariant.price -%}
            {%- assign show_compare = true -%}
        {%- endif -%}
        <div class="text-base font-bold text-color_1 mb-4 b-product__info-price">
            {%- if show_compare -%}
            <span class="line-through mr-2">
                {{ currentVariant.compare_at_price | money }}
            </span>
            {%- endif -%}
            <span>
            {{ currentVariant.price | money }}
            </span>
            {% if productSubtitle != blank %}
            <span class="font-Aksen font-bold text-color_1 text-base mb-2 b-product__info-subtitle">
                – {{ product.metafields.custom.subtitle.value }}
            </span>
            {% endif %}
    </div>
{% endcapture %}

<div
  x-data="productCard($el)"
  data-section-id="{{ section.id }}"
  data-first-variant="{{ product.first_available_variant.id }}"
>
  <section
    id="MainProduct-{{ section.id }}"
    data-section="{{ section.id }}"
    x-ref="productCardRef"
    class="l-product pt-4 md:pt-24"
  >

    {%- assign productColors = product.metafields.custom.color_palette.value -%}
    {%- assign productCurrent = product -%}

    {%- if section.settings.enable_color_palette -%}
      {% render 'color-pallete', product: product %}
    {%- endif -%}

    {%- comment -%} Передаємо дані продукту у зовнішній JS через JSON у DOM {%- endcomment -%}
    <script type="application/json" data-product-json>
      {{ productCurrent | json }}
    </script>

    <div class="container m-responsive">
      <div class="l-product__main md:flex pb-8 md:pb-0">
        <article class="l-product__gallery md:w-1/2 mb-12 md:mb-0 h-auto">
          <div class="l-product__gallery--skeleton rounded-regular" x-show="$store.ui.sliderLoading">
            <div></div>
          </div>

          {%- assign all_images = product.images | map: 'src' -%}
          {%- render 'product-media-gallery', product_images: all_images -%}

            {% comment %} <div class="main-product__benefits">
                {% assign productBenefits = product.metafields.custom.benefits.value %}
                <ul class="main-product__benefits-list">
                {% for benefit in productBenefits %}
                    <li class="main-product__benefits-item">
                    <figure class="main-product__benefits-icon">
                        <img src="{{ benefit.icon | img_url: '64x' }}" alt="{{ benefit.name }}" class="main-product__benefits-image" />
                    </figure>
                    <span class="main-product__benefits-text">{{ benefit.name }}</span>
                    </li>
                {% endfor %}
                </ul>
            </div> {% endcomment %}
        </article>

        <article class="l-product__info md:w-1/2 md:pl-[100px]">
          <div class="b-product__info page-width-mobile">
            <product-info
              id="ProductInfo-{{ section.id }}"
              data-section="{{ section.id }}"
              data-url="{{ product.url }}"
              class="product__info-container"
            >
              {% for block in section.blocks %}
                {% case block.type %}

                  {% when 'badge' %}
                    {% render 'product-badges', product: product, location: 'pdp' %}

                  {% when 'title' %}
                    {% assign productSubtitle = product.metafields.custom.subtitle.value %}
                    <h1 class="heading-4 text-color_1 font-normal tracking-normal leading-[110%] text-[36px] md:text-[48px] mb-[16px] b-product__info-title">
                        {{ product.title | escape }}
                    </h1>

                  {% when 'short_description' %}
                    {% assign shortDescription = product.metafields.custom.short_description %}
                    <p class="text-[16px] leading-[22px] tracking-normal text-[#474747] mb-[16px]">
                      {{ shortDescription }}
                    </p>

                    {% when 'product_detais' %}
                        {% assign html = product.metafields.custom.product_detais | metafield_tag %}
                      
                        {% assign html = html
                          | replace: '<ul>', '<ul class="my-6 border-t border-b border-[#474747] py-4 list-none m-0 p-0 space-y-3">'
                          | replace: '<li>', '<li class="flex justify-between gap-[15px] text-right  pb-3 last:pb-0">'
                          | replace: '<strong>', '<strong class="col-span-4 pr-4 text-base leading-[22px] tracking-[0.6px] font-semibold">'
                          | replace: '<span class="value">', '<span class="value col-span-8 pl-4 text-base leading-[22px] font-medium text-right block">'
                        %}
                      
                        {{ html }}
                    
                    {% when 'product_tags' %}
                        {% render 'product-tags' %}
                     

                  {% when 'price' %}
                    {%- assign show_compare = false -%}
                    {%- if currentVariant.compare_at_price and currentVariant.compare_at_price > currentVariant.price -%}
                      {%- assign show_compare = true -%}
                    {%- endif -%}
                    <div class="text-base font-bold text-color_1 mb-4 b-product__info-price">
                      {%- if show_compare -%}
                        <span class="line-through mr-2">
                          {{ currentVariant.compare_at_price | money }}
                        </span>
                      {%- endif -%}
                      <span>
                        {{ currentVariant.price | money }}
                      </span>
                      {% if productSubtitle != blank %}
                        <span class="font-Aksen font-bold text-color_1 text-base mb-2 b-product__info-subtitle">
                          – {{ product.metafields.custom.subtitle.value }}
                        </span>
                      {% endif %}
                    </div>


                  {% when '@app' %}
                    {% render block %}

                  {%- when 'tabs_product_selector' -%}
                    <div class="mb-4">
                      {% render 'tabs_product_selector',
                        block: block,
                        product: product,
                      %}
                    </div>

                    {% when 'buy_buttons' %}
                        <form id="pdp-buy-buttons" method="post"
                              x-data="{
                                quantity: 1,
                                min: {{ currentVariant.quantity_rule.min | default: 1 }},
                                max: {% if currentVariant.quantity_rule.max != null %}{{ currentVariant.quantity_rule.max }}{% else %}null{% endif %}
                              }"
                              @keydown.enter.prevent
                              class="w-full mb-[24px] md:mb-[32px]">
                          <div class="flex flex-col w-full items-center gap-[24px] md:gap-[32px]  mb-8">
                            <input type="hidden" name="quantity" :value="quantity">
                            
                            <!-- Qty control -->
                            <div class="flex w-full justify-between">
                                <p class="text-[14px] leading-[20px] tracking-[4px] uppercase text-[#474747]">Quantity</p>
                                <div class="flex items-center justify-between rounded-full min-w-[160px]">
                                <!-- Decrease -->
                                <button
                                    type="button"
                                    aria-label="Decrease quantity"
                                    @click="if (quantity > min) quantity--"
                                    :disabled="quantity <= min"
                                    class="inline-flex items-center justify-center md:w-[48px] md:h-[48px]
                                    w-[40px] h-[40px] rounded-full border p-[14px] text-xl transition
                                        text-[#474747] border-[#474747] bg-[#F5F5F5]
                                        disabled:border-[#ADAEB0] disabled:text-[#ADAEB0]
                                        hover:opacity-80 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-black/10">
                                    −
                                </button>
                            
                                <!-- Value -->
                                <input
                                    x-model.number="quantity"
                                    name="updates[]"
                                    type="number"
                                    inputmode="numeric"
                                    step="1"
                                    :min="min"
                                    :max="max ?? undefined"
                                    aria-label="Quantity"
                                    role="spinbutton"
                                    class="w-12 h-[48px] text-center bg-[#00000000] border-0 p-0 outline-none appearance-none
                                        text-[18px] leading-5 tracking-[4px] uppercase
                                        text-[#474747]">
                            
                                <!-- Increase -->
                                <button
                                    type="button"
                                    aria-label="Increase quantity"
                                    @click="if (!max || quantity < max) quantity++"
                                    :disabled="max && quantity >= max"
                                    class="inline-flex items-center justify-center md:w-[48px] md:h-[48px]
                                    w-[40px] h-[40px] rounded-full border p-[14px] text-xl transition
                                        text-[#474747] border-[#474747] bg-[#F5F5F5]
                                        disabled:border-[#ADAEB0] disabled:text-[#ADAEB0]
                                        hover:opacity-80 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-black/10">
                                    +
                                </button>
                                </div>
                            </div>
                        
                            <div class="flex w-full items-center gap-2 sm:gap-[8px]">
                              <!-- Add to cart -->
                              <button
                                type="button"
                                @click.prevent="addToCartPDP(quantity)"
                                class="w-full inline-flex items-center justify-center
                                       md:px-[32px] px-[24px] md:py-[16px] py-[12px] rounded-full
                                       bg-[#474747] text-white
                                       text-[14px] leading-4 tracking-[4px] uppercase
                                       transition hover:opacity-90 active:opacity-80
                                       focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-black/10">
                                <span class="product-price">{{ price }} </span>
                                 <span class="separator">-</span>
                                <span> Add to cart</span>
                              </button>
                        
                              <!-- Wishlist placeholder -->
                                <button
                                type="button"
                                aria-label="Add to wishlist"
                                class="inline-flex shrink-0 items-center justify-center md:w-[48px] md:h-[48px]
                                w-[40px] h-[40px]
                                    rounded-full border border-white bg-[#474747] text-white
                                    transition hover:opacity-90 active:opacity-80
                                    focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40">
                                <svg viewBox="0 0 24 24" class="w-5 h-5" fill="none"
                                    stroke="currentColor" stroke-width="1.6" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
                                <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"/>
                                </svg>
                                </button>

                            </div>
                          </div>
                        </form>

                  {% when 'delivery' %}
                    <div class="product-delivery__info border border-[#ADAEB0] rounded-2xl p-5 md:p-6 mb-[24px]">
                        <ul class="list-none m-0 p-0 space-y-[14px]">
                        {% for i in (1..3) %}
                            {% assign key_t  = 'text_' | append: i %}
                            {% assign key_ic = 'icon_' | append: i %}
                            {% assign key_svg = 'svg_' | append: i %}
                    
                            {% assign t = block.settings[key_t] %}
                            {% assign ic = block.settings[key_ic] %}
                            {% assign svg = block.settings[key_svg] %}
                    
                            {% if t != blank or ic != blank or svg != blank %}
                            <li class="flex items-center gap-[16px]">
                                {% if svg != blank %}
                                <span class="[&_svg]:w-[24px] [&_svg]:h-[24px] md:[&_svg]:w-[32px] md:[&_svg]:h-[32px] [&_svg]:flex-none [&_svg]:shrink-0" aria-hidden="true">
                                    {{ svg }}
                                </span>
                                {% elsif ic != blank %}
                                {{ ic | image_url: width: 64 | image_tag:
                                    class: 'w-6 h-6 md:w-8 md:h-8 shrink-0 flex-none',
                                    loading: 'lazy',
                                    alt: '' }}
                                {% endif %}
                    
                                {% if t != blank %}
                                <p class="text-sm leading-5 tracking-normal">
                                    {{ t }}
                                </p>
                                {% endif %}
                            </li>
                            {% endif %}
                        {% endfor %}
                        </ul>
                    </div>
                        
                    {%- assign tabs_rendered = false -%}
                    {%- for block in section.blocks -%}
                        {%- case block.type -%}

                            {%- when 'tab_item' -%}
                                {%- unless tabs_rendered -%}
                                    {%- assign tabs_rendered = true -%}
                                    {%- assign tab_items = section.blocks | where: 'type', 'tab_item' -%}
                                    <div class="product-tabs ui-acc-group  border-[#474747]">
                                    {%- for b in tab_items -%}
                                        {%- render 'accordion-item',
                                            q: b.settings.question,
                                            a: b.settings.answer,
                                            open: b.settings.open_by_default,
                                            class: 'last:border-b border-[#474747]'
                                        -%}
                                    {%- endfor -%}
                                    </div>
                                {%- endunless -%}

                            {%- else -%}
                            
                        {%- endcase -%}
                    {%- endfor -%}

                      
                  {% when 'description' %}
                    {% if product.description != blank %}
                      <div
                        style="color: var(--tertiary-color);"
                        class="text-base text-center b-product__info-desc"
                      >
                        {{ product.description }}
                      </div>
                    {% endif %}

                  {% when 'custom_liquid' %}
                    {% render block %}
                {% endcase %}
              {% endfor %}
            </product-info>
          </div>
        </article>
      </div>
    </div>

    <article class="l-product__details"></article>
    <article class="l-product__recommended"></article>

    {%- if product.metafields.custom.ingredients_nutrition_facts.value != blank
      or product.metafields.custom.variety_pack_products.value != blank
    -%}
      {% render 'product-ingredients-and-nutrition-new', product: product %}
    {% endif %}

        <!-- Mobile back-to-buy toast -->
        <div x-data="toastBackToBuy('#pdp-buy-buttons')"
        x-show="visible"
        x-transition.opacity.duration.200ms
        class="md:hidden fixed inset-x-0 bottom-0 z-50 w-full">
            <div class="rounded-tl-[20px] rounded-tr-[20px] border border-[#DADADA] bg-white shadow-regular p-[16px]">
                <h4 class="text-[18px] leading-[120%] text-[#474747] truncate mb-[12px]">
                {{ product.title }}
                </h4>
                <button type="button"
                    @click="scrollToBuy"
                    class="w-full inline-flex items-center justify-center px-4 py-[8px] rounded-full
                            bg-[#474747] text-white text-[12px] leading-4 tracking-[3px] uppercase
                            transition hover:opacity-90 active:opacity-80 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-black/10">
                Back to buy
                </button>
            </div>
        </div>
  </section>
</div>

<script>
  document.addEventListener('alpine:init', () => {
    if (!Alpine.store('ui')) Alpine.store('ui', { sliderLoading: true })
  })
</script>


<script>
document.addEventListener('alpine:init', () => {
  Alpine.data('toastBackToBuy', (targetSelector, opts = {}) => ({
    visible: false,
    threshold: 300,
    io: null,
    headerOffset: 0,
    ro: null,

    init() {
      const target = document.querySelector(targetSelector)
      if (!target) return

      const selHeader = '#id_header, .m-sticky, header, .site-header'
      const selAnnounce = '[data-announcement-bar], .announcement-bar'

      const getTotalHeight = (selector) => {
        let total = 0
        document.querySelectorAll(selector).forEach(el => {
          if (!el) return
          const rect = el.getBoundingClientRect()
          // врахуємо тільки видимі зверху елементи
          const style = getComputedStyle(el)
          const isHidden = style.display === 'none' || style.visibility === 'hidden'
          if (!isHidden) total += rect.height
        })
        return total
      }

      const computeOffset = () => {
        const extra = 12 // невеликий запас
        this.headerOffset = (opts.offsetPx ?? 0) + getTotalHeight(selHeader) + getTotalHeight(selAnnounce) + extra
      }

      computeOffset()

      // оновлюємо офсет при зміні розміру/висоти хедера
      this.ro = new ResizeObserver(() => computeOffset())
      document.querySelectorAll(selHeader + ',' + selAnnounce).forEach(el => this.ro.observe(el))
      window.addEventListener('resize', computeOffset)

      const makeObserver = () => {
        if (this.io) this.io.disconnect()
        this.io = new IntersectionObserver((entries) => {
          const e = entries[0]
          const away = !e.isIntersecting
          this.updateVisibility(away)
        }, { rootMargin: `-${this.headerOffset}px 0px -40% 0px`, threshold: [0, 1] })
        this.io.observe(target)
      }
      makeObserver()
      setTimeout(makeObserver, 0) // на випадок асинхронного рендеру хедера

      this.onScroll = () => { if (window.scrollY < this.threshold) this.visible = false }
      window.addEventListener('scroll', this.onScroll, { passive: true })
    },

    updateVisibility(away) {
      this.visible = away && window.innerWidth < 768 && window.scrollY > this.threshold
    },

    scrollToBuy() {
      const target = document.querySelector(targetSelector)
      if (!target) return
      const top = target.getBoundingClientRect().top + window.pageYOffset - this.headerOffset
      window.scrollTo({ top, behavior: 'smooth' })
    },

    destroy() {
      if (this.io) this.io.disconnect()
      if (this.ro) this.ro.disconnect()
      window.removeEventListener('resize', this.computeOffset)
      window.removeEventListener('scroll', this.onScroll)
    }
  }))
})
</script>




{% schema %}
{
  "name": "Main Product Section",
  "tag": "section",
  "class": "section",
  "blocks": [
    {
      "type": "@app"
    },
    {
        "type": "badge",
        "name": "Badge",
        "limit": 1
    },
    {
      "type": "title",
      "name": "Title",
      "limit": 1
    },
    {
      "type": "short_description",
      "name": "Short description",
      "limit": 1
    },
    {
        "type": "delivery",
        "name": "Delivery",
        "limit": 1,
        "settings": [
            { "type": "paragraph", 
            "content": "Choose photo or paste svg code" },

            { 
                "type": "header", 
                "content": "Row 1" 
            },
            { 
                "type": "image_picker",
                "id": "icon_1", 
                "label": "Icon 1 (SVG/PNG)" 
            },
            { 
                "type": "textarea", 
                "id": "svg_1", 
                "label": "Icon 1 — SVG code", 
                "info": "Paste <svg>...</svg>" 
            },
            { 
                "type": "text", 
                "id": "text_1", 
                "label": "Text 1", 
                "default": "Next business day delivery UK nationwide" 
            },

            { 
                "type": "header", 
                "content": "Row 2" 
            },
            { 
                "type": "image_picker", 
                "id": "icon_2", 
                "label": "Icon 2 (SVG/PNG)" 
            },
            { 
                "type": "textarea", 
                "id": "svg_2", 
                "label": "Icon 2 — SVG code", 
                "info": "Paste <svg>...</svg>" 
            },
            { 
                "type": "text", 
                "id": "text_2", 
                "label": "Text 2", 
                "default": "Same-day delivery in London" 
            },

            { 
                "type": "header", 
                "content": "Row 3" 
            },
            { 
                "type": "image_picker", 
                "id": "icon_3", 
                "label": "Icon 3 (SVG/PNG)" 
            },
            { 
                "type": "textarea", 
                "id": "svg_3", 
                "label": "Icon 3 — SVG code", 
                "info": "Paste <svg>...</svg>" 
            },
            { 
                "type": "text", 
                "id": "text_3", 
                "label": "Text 3", 
                "default": "Instant delivery on delivery platforms" 
            }
        ]
    },
    {
      "type": "product_detais",
      "name": "Product details",
      "limit": 1
    },
    {
      "type": "product_tags",
      "name": "Product tags",
      "limit": 1
    },
    {
      "type": "price",
      "name": "Price Product",
      "limit": 1
    },
    {
      "type": "description",
      "name": "Product Description",
      "limit": 1
    },
    {
        "type": "tab_item",
        "name": "Tab",
        "settings": [
            { "type": "text", "id": "question", "label": "Title", "default": "Ingredients" },
            { "type": "richtext", "id": "answer", "label": "Content", "default": "<p>Add your content here</p>" },
            { "type": "checkbox", "id": "open_by_default", "label": "Open by default", "default": false }
        ]
    },
    {
      "type": "variant_picker",
      "name": "Variants Picker",
      "limit": 1
    },
    {
      "type": "buy_buttons",
      "name": "Buy Buttons",
      "limit": 1
    },
    {
      "type": "tabs_product_selector",
      "name": "Tabs Product Selector",
      "settings": [
        {
          "type": "header",
          "content": "Tab 1"
        },
        {
          "type": "select",
          "id": "tab_selected",
          "label": "Selected Tab",
          "options": [
            {
              "value": "one-time",
              "label": "One Time"
            },
            {
              "value": "subscribe",
              "label": "Subscribe"
            }
          ],
          "default": "subscribe"
        },
        {
          "type": "text",
          "id": "tab1_title",
          "label": "Tab Heading",
          "default": "One-time purchase"
        },
        {
          "type": "product_list",
          "id": "tab1_product_list",
          "label": "Products"
        },
        {
          "type": "header",
          "content": "Tab 2"
        },
        {
          "type": "text",
          "id": "tab2_title",
          "label": "Tab Heading",
          "default": "Subscribe & Save"
        }
      ]
    },
    {
      "type": "custom_liquid",
      "name": "Custom Liquid",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "Custom Liquid",
          "info": "Code"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "product_list",
      "id": "product_list",
      "label": "Product List",
      "limit": 8
    },
    {
      "type": "checkbox",
      "id": "enable_color_palette",
      "default": true,
      "label": "Enable Color Palette"
    }
  ],
  "presets": [
    {
      "name": "Main Product Section"
    }
  ]
}
{% endschema %}
