

{%- assign progress_bar = shop.metaobjects['progress_bar']['bundle'] -%}
{%- if progress_bar != blank -%}
  {%- liquid
    assign items = progress_bar.items.value
    assign calculated_total_price = 0
  
    for line_item in cart.items
      assign calculated_total_price = calculated_total_price | plus: line_item.final_line_price
    endfor
  
    # We have to remove the cart level discount from the calculated amount
  
    assign total_cart_discount = 0
    assign all_total_cart_discount = 0
  
    for discount_application in cart.cart_level_discount_applications
      assign total_cart_discount = total_cart_discount | plus: discount_application.total_allocated_amount
    endfor
   
     
     if cart.total_price != cart.original_total_price
       assign all_total_cart_discount = cart.original_total_price | minus: cart.total_price
     endif
  
    assign calculated_total_price = calculated_total_price | minus: total_cart_discount
  -%}
  <script>
  var cart_total = parseInt({{ cart.original_total_price | default: 0 }});
  var final_total = parseInt({{ last_item }});
  let progress_config = {
    {%- for item in  items -%}
      {%- liquid
        assign minimum_subtotal = item.minimum_subtotal.value
        assign discount = item.discount.value | default: 0 | plus: 0
        assign unlock_text = item.unlock_text.value
        assign text = item.text.value
      -%}
      {%- if item != blank -%}
        {{ minimum_subtotal }} : {
          "minimum_subtotal": {{ minimum_subtotal }},
          "discount" : {{ discount }},
          "unlock_text" : '{{ unlock_text }}',
          "text" : '{{ text }}',
          "active": {{ forloop.index0 }}
        },
      {% endif -%}
    {%- endfor -%}
  };
   
function getTextBasedOnTotal(total) {
  let applicableConfig = null;

  for (const subtotal in progress_config) {
    if (total <= subtotal) {
      applicableConfig = progress_config[subtotal];
      break;
    }
  }

  if (applicableConfig) {
    return applicableConfig;
  } else {
    return false;
  }
}
   console.log('progress_config', progress_config);
</script>
  <div class="unlock-text">
    {% assign success_text = progress_bar.success_text %}

    {% for item in items %}
      {%- liquid
        assign minimum_subtotal = item.minimum_subtotal.value | minus: all_total_cart_discount
        assign unlock_text = item.unlock_text.value
      -%}
      
      {%- if minimum_subtotal > calculated_total_price  -%}
        
        {% assign success_text = '' %}
        {{ unlock_text }}
        {%- break -%}
      {%- endif -%}
    {% endfor %}
    {% if success_text != blank %}
      <b>{{ success_text }}</b>
    {% endif %}
  </div>
  <div class="progress-bar">

    {%  assign last_item = items | last %}
    {%  assign last_item = last_item.minimum_subtotal.value | plus: 0 %}

   <div class="progress-bar__block" style="--progress: {{ cart.original_total_price | times: 1.0 | divided_by: last_item | at_most: 1 }}">
      <div class="progress-bar__points">

      {% for item in items %}
        {%- liquid
        assign minimum_subtotal = item.minimum_subtotal.value | minus: all_total_cart_discount
        assign percent = item.minimum_subtotal.value | times: 1.0  | divided_by: last_item | times: 100
        -%}

        <div class="progress-bar__point {% if minimum_subtotal <= calculated_total_price %}active{% endif %}" style="left: calc({{ percent }}% - 25px)"></div>
      {% endfor %}
      </div>
      <span class="progress-bar__progress"></span>
    </div>
  </div>
  <div class="lock-text">
    {% for item in items %}
      {%- liquid
        assign minimum_subtotal = item.minimum_subtotal.value | minus: all_total_cart_discount
        assign remaining_amount_value = calculated_total_price | minus: minimum_subtotal | abs | money
        assign lock_text = item.text.value
      -%}
      {%- if minimum_subtotal > calculated_total_price  -%}
        {{ lock_text | replace: '[value]', remaining_amount_value }}
        {%- break -%}
      {%- endif -%}
    {% endfor %}
  </div>
  
{%- endif -%}